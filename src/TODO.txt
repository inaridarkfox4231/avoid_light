背景の透明度について
システムに持たせてプレイヤーがギミックで明るくできるとか
そういうの面白そう

後考えてるのはハートを取るアイテムにして
取ったら消えるようにする・・
フラグを用意すればできそう
フラグがオフなら描画されないので
あとCPU側でも衝突判定に入れないように考慮する

当面はグリッドかな
配置しやすくしたいので
16x16を最小単位にして4x4でモザイクしたい感じかしらね
32x32でゴール
320なので±20のあれであれです。
goalPosもグリッドの交点を指定してそこを角に持つ16x16が4つ、
そういう32x32にすれば指定しやすそう。
回転させる場合はフェイズと回転方向おねがいね実装

クリアしたらゴールのとこがグローで光るようにするとかしたいね
で、連続してパーティクル出す。複数ある場合は複数をそういう状態に
できたらクリアみたいなの面白そうね

ATOMにやってきました。Hello!!!

今、グリッド的に-20,-20～20,20でこれが640x640の場合。
640x1280とかならこれに対しても最小サイズの16を適用して-20,-40～20,40とかする感じね。で、
createWallもそれに応じたものになるわけ。それでいいと思う。後は同じ。
あとシェーダの方でもちゃんと640で割る。そうすればたとえば1280x1280とかでもちゃんと-40,-40～40,40になってくれるから
同じように指定できるわね。

どうするかな。
まあ、やられたら最初に戻すか。ライフをね・・リセットするかどうかって話。
ルームナンバーを0に戻す、っていう。つまりライフの減少を持ち越すかどうかって話。持ち越した方がいいと思う。
あとは回復アイテム作ればいいでしょ。
つまりゲームオーバーからは問答無用で0に戻すと。で、クリアの場合はプレイヤーのライフを戻さない感じで。

でもそのうちSTG要素というか弾幕も用意したいなって思ってて・・
その場合はパーティクルの発生場所をあれにしないとやばいわけで。やられる時だけならいいけど。だからそこら辺。
ダブルシェーダ（板ポリ芸とポイントシェーダーの合わせ技）
まあいいやそういうのは要らないからとりあえず
高速描画が必要なほど弾幕用意したら別のゲームになっちゃうから

saveJSONっていうのがあってね。
これ使うとJSON形式でデータを取り出せる・・もちろんロードも揃ってる。

room0はチュートリアルっぽくする（目玉が1つ中央上でぐるぐるしててそのすぐ下にゴールがあって
それ踏んだらクリアだよみたいな感じ）

ゴールを増やす。名前もゴール→チェックポイントに変える。
チェックポイントをすべて発光させるとクリアフラグが立つ。OK!

あと次の3点で終わりにする
1: オブジェクトの位置・回転の情報をuniform登録して別立て処理にする。シェーダーの組み立て部分もいじる。これにより、
オブジェクトの位置と回転を自由に操作できるようになるわけ。動くオブジェクトは当たるとアウト、それを実装するには
どれに当たったかの情報とそれが動いているかどうかを返すフラグが必要になる。動いてなければダメージはないのでそこら辺の
処理も必要ね。
2: ゴールを複数にする。ゴールではなくチェックポイントという名称にする。まずはそこら辺をいじる必要。で、すべてのチェックポイントを
回るとクリアとする。まあそんな感じ。
修正。チェックポイントはスカイブルー、それとは別にライムグリーンで大きめ(64x64)のゴールを作る。そこが解放される。判定は同じ。
中心いかないとだめ。おわり。チェックポイントは最大8つで個数も送る。
3: 大きなステージ。640x1280とか1280x1280とか作りたいわね。で、オフセット描画。これはそこまで難しくないと思う。
baseGraphicとlightEffectをその大きさにして描画するときに画面サイズに合わせる、どう合わせるかはオフセット計算。
そのくらいしかやることがないので。あとそうね、今-1～1x-1～1でやってるのが-2～2x-1～1になったりするわね。そこら辺、
指定の仕方とかはいじる必要あるけどほんとにそのくらいしかないと思う。
4.残基数・・残基は難易度別に3,5,10で。これが0にならなければそのステージの最初からHP全快で再開できるが0になったら最初に戻される、
その際にスコア的な何か、数字では評価しない。クリアステージ数、それらのクリアにかかった時間（そのステージで死ぬまでの時間は含まれない）、
残りライフ、残り残基。で、ランクシステムも考えてないわけじゃないよ。タイムアタック部門とライフ部門。どちらもクリアステージ数大きいのが上。
その先はタイムアタックならタイム→残基→ライフの順で評価、ライフなら残基→ライフ→タイムの順で評価。おわり。

おわり。

1.について処理切り分け
obj用のシェーダーテキストを作るところを書き換える。具体的にはsetUniformでxとyについての情報を送るので、それの
だからベクトルv[0].x,v[0].yみたいのにする、わけ。0とか1とか織り込んで。で、それは毎フレーム更新。要するに別の関数を作るのね。
そこに今は定数でいいからそれを定める関数を用意するわけです。今は定数でいい。まるごと移植。
まあ回転も織り込んじゃうかめんどくさい。そうなるとフェイズ（最初の位相）も必要になるわね。
図形の定義のところは大幅に書き換える必要性。
動いてるかどうかのフラグも用意。それを動かすためのメソッドも必要になる（動いたり止まったりするわけで）。
そこら辺のアクションは敵の動きもそうだけど定義しやすくしないとめんどくさい。この辺はすべてCPU管理。シェーダには値を渡すだけなので。

動きって別のクラスに分けるべきなのね・・いちいち書くのあれだもんね。
てかスケールも？UnityもBlenderもそこら辺・・ああ、そうか。スケール変換も織り込むことにすれば
正方形も長方形も変わらんし、円も楕円も変わらんわね。んー・・てことはあれ、あー、線分も？そうね・・んー。
線分は変なことになりそうだけど。あと三角形？正三角形でなくなるけど計算がおかしくなるわけじゃない、まあでもあれ、んー・・
なるほど・・・どうするかね。

//--- 仕様変更log(2021/10/31) ---//

予想通りえらいことになった
まずheartは封印（segment仕様変更したので）
そこまではいい
どゆこと？？？？？
rotの0を入れることになったんでそこら辺
createWallのあとでregistObstaclesするんだっけ間違えた
じゃああの十字はセグメント？？？
segmentのconstructorでx,y,rot抜けてましたごめんなさい！！
んー・・もしかして光のもとにいないときにダメージ受けてる？？でも何で？？
てかキー入力も反応してない。光の範囲はOK.うーん・・・
動いた先がobstacleと接触だと動けないことになってるからキー入力じゃなくてDistFunctionが問題なんだろていうかgetDist()だよ
そこしかいじってないんだから
光の範囲が正常なのはGLSL側で計算してるからだよだからgetDistに原因があると考えるのが妥当。
あ、translateがcosとsin1箇所間違って・・た・・・ごめ・・・
バグ取れたと思ったらroom1がバグってる（おい）
間違ってるのは表示位置だけで当たり判定は問題ないっぽい。。
GLSL側に問題があるようですね
registObstaclesしてなかった（え・・）
できた！
