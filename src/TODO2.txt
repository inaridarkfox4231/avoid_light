ちょっとメモ
なんとなくこうするみたいな感じの
{
  name:["position", "lightDirection"], // 動かしたいプロパティ名
  dimension:[2, 1]; // 次元（ベクトルの場合は2や3でそれ以外の場合は1ですね）。配列・・・・？知らん。。。
  // まあ、配列でもやりたいっていうんならisArrayとかかませる感じにはなるんだろうけど。めんどくさいな・・
  // たとえばboolとか使いそうだし0をboolに割り当てるとかそういうのもありかしらね。文字列？4で・・
  // 文字列の場合の関数とかも必要なんかね・・文字列あったっけ？あっちの、あれ。なかったっけ？？ないか。
  position:[{line:[10, 18, 20, 18, 60], easing:"line"}, {line:[20, 18, 10, 18, 60], easing:"line"}];
  lightDirection:[{line:[0, 2*PI, 120], easing:"line"}]
}
って感じ
lineは真っ直ぐにlerpで変化する感じですね
dimensionは要するに2とか1とか、ベクトルですね。positionとかはプロパティ名。で、あの3とかだったら3次元のベクトルで、
.xとか.yとか.zで干渉するわけ。で、その・・1だったらその値そのものを変化させる感じですね。で、easingはイージングで
一応"line"とかなってるけど直線的に変化するのがデフォルトなのでこれ実は要らなくてなしでOKです。
backInOutとかそういうの想定しているつもりですけどまあおいおい。クラス名は"Driver"でこれをjsonから生成して
その・・eyeとかに持たせますね。で、実行させますね。そんな感じで。

できるの？？
まあ、できるでしょ。。そんな感じのことをそもそもやりたかった。原点は、それ。

方針

簡単に方針を決めました。
まずループ関連の処理はSTGで作ったものを再利用
actionArrayの各々のオブジェクトをstaticの関数か何かで実装する
それを使って移動関連の処理を実行するイメージ
できそう？
